/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumPaymentsMethodAccount } from "./EnumPaymentsMethodAccount";
import { IsEnum, IsOptional, IsString, ValidateNested } from "class-validator";
import { PaymentUpdateManyWithoutPaymentsMethodsInput } from "./PaymentUpdateManyWithoutPaymentsMethodsInput";
import { Type } from "class-transformer";
import { EnumPaymentsMethodPaymentType } from "./EnumPaymentsMethodPaymentType";
import { EnumPaymentsMethodStatus } from "./EnumPaymentsMethodStatus";

@InputType()
class PaymentsMethodUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumPaymentsMethodAccount,
  })
  @IsEnum(EnumPaymentsMethodAccount)
  @IsOptional()
  @Field(() => EnumPaymentsMethodAccount, {
    nullable: true,
  })
  account?:
    | "Bri"
    | "Mandiri"
    | "Bni"
    | "Hsbc"
    | "ShopeePay"
    | "Ovo"
    | "Gopay"
    | "Dana"
    | "Qris"
    | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nameRef?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  noRef?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutPaymentsMethodsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutPaymentsMethodsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutPaymentsMethodsInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutPaymentsMethodsInput;

  @ApiProperty({
    required: false,
    enum: EnumPaymentsMethodPaymentType,
  })
  @IsEnum(EnumPaymentsMethodPaymentType)
  @IsOptional()
  @Field(() => EnumPaymentsMethodPaymentType, {
    nullable: true,
  })
  paymentType?: "BankTransfer" | "Ewallet" | null;

  @ApiProperty({
    required: false,
    enum: EnumPaymentsMethodStatus,
  })
  @IsEnum(EnumPaymentsMethodStatus)
  @IsOptional()
  @Field(() => EnumPaymentsMethodStatus, {
    nullable: true,
  })
  status?: "Active" | "NonActive" | null;
}

export { PaymentsMethodUpdateInput as PaymentsMethodUpdateInput };
